A02 - Cryptographic Failures - Sample Curl Commands
==================================================

Server: python A02_Example_Cryptographic_Failures.py
Port: 5002

# VULNERABLE ENDPOINTS - Demonstrating Cryptographic Failures:

# Test user registration with weak MD5 password hashing:
curl -X POST http://localhost:5002/register \
  -H 'Content-Type: application/json' \
  -d '{"username":"testuser","password":"password123","email":"test@example.com"}'

# Test login with MD5 hash comparison:
curl -X POST http://localhost:5002/login \
  -H 'Content-Type: application/json' \
  -d '{"username":"admin","password":"admin123"}'

curl -X POST http://localhost:5002/login \
  -H 'Content-Type: application/json' \
  -d '{"username":"alice","password":"password"}'

# View user profiles with weak base64 "encryption":
curl http://localhost:5002/profile/1
curl http://localhost:5002/profile/2

# Vulnerability: MD5 password hashing, base64 encoding instead of encryption
# Impact: Passwords easily cracked, sensitive data easily decoded

# SECURE ENDPOINTS (Solutions):

# Test secure registration with bcrypt password hashing:
curl -X POST http://localhost:5002/secure/register \
  -H 'Content-Type: application/json' \
  -d '{"username":"secureuser","password":"SecurePass123","email":"secure@example.com"}'

# Test secure login with bcrypt verification:
curl -X POST http://localhost:5002/secure/login \
  -H 'Content-Type: application/json' \
  -d '{"username":"secureuser","password":"SecurePass123"}'

# Update payment info with strong encryption:
curl -X POST http://localhost:5002/secure/update_payment \
  -H 'Content-Type: application/json' \
  -d '{"user_id":1,"credit_card":"1234-5678-9012-3456"}'

# View secure profile with proper encryption:
curl http://localhost:5002/secure/profile/1

# The secure implementation demonstrates:
# - bcrypt for password hashing with salt
# - Fernet (AES) for symmetric encryption
# - Proper key generation and management